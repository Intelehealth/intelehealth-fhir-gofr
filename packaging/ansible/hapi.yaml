---
- name: HAPI FHIR Server
  hosts: all
  remote_user: "{{ user }}"
  # become: true
  tags: prep

  vars_prompt:

    - name: "user"
      prompt: "Please enter the username (with sudo)"
      private: no

    - name: "pgpass"
      prompt: "Please provide the password for the hapi postgres user in plain text (it will be md5-hashed)"
      private: no

  tasks:

  - name: hapi folder exists
    stat:
      path: $HOME/hapi-fhir-jpaserver-starter
    register: stat_result2


  - name: git clone repo hapi-jpa-server-starter
    git:
      repo: 'https://github.com/hapifhir/hapi-fhir-jpaserver-starter.git'
      dest: /home/{{ user }}/hapi-fhir-jpaserver-starter
      clone: yes
      # note that this blows away any existing changes to application.yaml
      force: yes
      # update: yes
      # version: v5.5.2
    when: stat_result2.stat.exists == False


  - name: git pull if updated
    git:
      repo: 'https://github.com/hapifhir/hapi-fhir-jpaserver-starter.git'
      dest: /home/{{ user }}/hapi-fhir-jpaserver-starter
      update: yes
      force: yes


  - name: git checkout v6.0.1
    shell: git checkout v6.0.1
    args:
      chdir: /home/{{ user }}/hapi-fhir-jpaserver-starter


  - name: install application.yaml template for hapi jpa Server
    template:
      src: 601-application.yaml
      dest: /home/{{ user }}/hapi-fhir-jpaserver-starter/src/main/resources/application.yaml
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: 0755
      force: yes


  - name: mvn clean --no-transfer-progress --batch-mode package
    shell: mvn clean --no-transfer-progress --batch-mode package -DskipTests
    args:
      chdir: /home/{{ user }}/hapi-fhir-jpaserver-starter
    environment:
      MAVEN_OPTS: -Xmx2048m


# stop tomcat
  - name: stop tomcat9
    service: 
      name: tomcat9.service
      state: stopped
      enabled: yes
    become: true


# move default ROOT into ROOT-Closed
  - name: move default ROOT into ROOT-Closed
    shell: rm -rf /var/lib/tomcat9/webapps/ROOT*
    # shell: mv /var/lib/tomcat9/webapps/ROOT /var/lib/tomcat9/webapps/ROOT-Closed
    become: true
    # this works once, then fails
    # ignore_errors: yes
    ignore_errors: no


# move package into /var/lib/tomcat9/webapps/
  - name: move war file to /var/lib/tomcat9/webapps/
    shell: cp ROOT.war /var/lib/tomcat9/webapps/
    args:
      chdir: /home/{{ user }}/hapi-fhir-jpaserver-starter/target/
    become: true
    

  - name: create lucene target
    ansible.builtin.file:
      path: /var/lib/tomcat9/target
      state: directory
      # needs broad perms
      mode: '0777'
      owner: tomcat
      group: tomcat
    become: true

  - name: create lucenefiles
    ansible.builtin.file:
      path: /var/lib/tomcat9/target/lucenefiles
      state: directory
      mode: '0777'
      owner: tomcat
      group: tomcat
    become: true


  - name: Create a tomcast9 override directory if it does not exist
    ansible.builtin.file:
      path: /etc/systemd/system/tomcat9.service.d
      state: directory
      owner: root
      group: root
      mode: '0755'
    become: true


# todo move over tomcat9 override file for env vars
  - name: Copy tomcat9 override file
    ansible.builtin.copy:
      # if src is on remote
      # src: /home/{{ user }}/gofr/packaging/ansible/tomcat9_override.conf
      # use file on controller
      src: tomcat9_override.conf
      dest: /etc/systemd/system/tomcat9.service.d/tomcat9_override.conf
      # copy from remote clone, comment out to use local version
      # remote_src: yes
      owner: root
      group: root
      mode: '0755'
    become: true


# kick tomcat
  - name: kick tomcat9
    service: 
      name: tomcat9.service
      state: started
      enabled: yes
    become: true


# pause to let tomcat start and then check status
  - pause:
      seconds: 10

# status
  - name: status
    command: systemctl status tomcat9.service
    register: status


  - debug:
      msg: "{{ status.stdout_lines }}"


  - name: Gather facts on listening ports
    listen_ports_facts:


  - name: List TCP ports
    debug:
      msg: "{{ ansible_facts.tcp_listen  | map(attribute='port') | sort | list }}"
